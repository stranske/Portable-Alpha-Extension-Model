 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/README.md b/README.md
index c60285aa5ca738e244c141d9b73c67633b444c38..cd75d88fba17b3212ce5925ed79cc10b0bbf5f83 100644
--- a/README.md
+++ b/README.md
@@ -1,30 +1,41 @@
 # Portable Alpha-Extension Model
 
 Portable Alpha + Active Extension Model Specification
 Below is a comprehensive description of the updated portable‐alpha + active‐extension model, ready to paste into a Markdown cell. Every section is clearly labeled, and all equations use LaTeX delimiters.
 
+## Setup
+
+Run the setup script to create a Python virtual environment and install dependencies:
+
+```bash
+./setup.sh
+```
+
+Execute this once before running any notebooks or other scripts.
+
+
 1. Purpose and High-Level Overview
 Goal:
 Construct a Monte Carlo framework that allocates a fixed pool of capital (e.g. $1 b) across three “sleeves” (Internal, External Portable-Alpha, and Active Extension), simulates joint returns on Index, In-House α, Extension α, and External PA α, and then reports portfolio metrics (annual return, volatility, VaR, tracking error, breach probability).
 
 Key innovations vs. a simpler portable-alpha model:
 
 Separate “reference period” used to compute index volatility σₙ, which in turn determines the cash/margin needed to synthetically hold 1:1 index exposure.
 Three explicit buckets whose dollar-amounts sum to $ 1 b, avoiding any double-counting of β + α exposures.
 Active Extension bucket that can be “150/50” or “170/70” long/short, specified by an “Active share (%)” input. By default, we assume 150/50 (i.e. Active share = 50 %) unless the user overrides.
 Everything ultimately flows into a set of formulas—one per bucket—that map monthly draws of [ (r_{\beta},,r_{H},,r_{E},,r_{M}) \quad\text{and}\quad f_t ] into portfolio returns.
 
 2. Core Assumptions and Variables
 Index (β) returns
 
 We load a historical time series of monthly total returns on the S&P 500 TR (or whichever index) from a CSV.
 We partition that series into:
 A reference window (e.g. 2010 – 2014) used to compute “reference volatility” σₙ.
 An analysis window (e.g. 2015 – 2020) used to compute the actual mean (μₙ) and volatility (σₙ) that drive our Monte Carlo draws.
 Three α-streams (simulated jointly with β)
 
 In-House α (
 ):
 Mean = μ_H/12
 Vol = σ_H / √12
 Correlation ρ_{β,H} with β.
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000000000000000000000000000000000000..197e60ec5b51b07e038339df179c87e25cfcf214
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1,4 @@
+numpy
+pandas
+openpyxl
+jupyter
diff --git a/setup.sh b/setup.sh
new file mode 100755
index 0000000000000000000000000000000000000000..0f1d6e4ef9d05823e323368d81845cf8ab895252
--- /dev/null
+++ b/setup.sh
@@ -0,0 +1,5 @@
+#!/bin/bash
+set -e
+python3 -m venv .venv
+source .venv/bin/activate
+pip install -r requirements.txt
 
EOF
)