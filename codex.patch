 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/Portable_Alpha_Vectors.ipynb b/Portable_Alpha_Vectors.ipynb
index 93ca461188f512006d94d5ba072cedc05f576c1a..eebbbbf7eac805dbd09d5aa4a1e828605eff56b1 100644
--- a/Portable_Alpha_Vectors.ipynb
+++ b/Portable_Alpha_Vectors.ipynb
@@ -98,50 +98,51 @@
    "id": "50896230-6c8e-4547-ad48-efab630dbba4",
    "metadata": {},
    "outputs": [],
    "source": [
     "# portable_alpha_model.py\n",
     "\n",
     "import sys\n",
     "import csv\n",
     "import numpy as np\n",
     "import pandas as pd\n",
     "from pathlib import Path\n",
     "import tkinter as tk\n",
     "from tkinter import filedialog\n",
     "import openpyxl\n",
     "import os\n",
     "from __future__ import annotations\n",
     "from typing import Optional, Union\n",
     "\n",
     "# =============================================================================\n",
     "# 1. MAPPING: User-friendly labels â†’ Internal variable names\n",
     "# =============================================================================\n",
     "\n",
     "LABEL_MAP = {\n",
     "    \"Analysis mode\": \"analysis_mode\",\n",
     "    \"Number of simulations\": \"N_SIMULATIONS\",\n",
+    "    \"Number of months\": \"N_MONTHS\",\n",
     "    # Capital mode inputs\n",
     "    \"Max external combined (%)\":            \"max_external_combined_percent\",\n",
     "    \"External step size (%)\":               \"external_step_size_percent\",\n",
     "    # Fixed-capital (for non-capital modes)\n",
     "    \"External PA capital (mm)\":             \"external_pa_capital\",\n",
     "    \"Active Extension capital (mm)\":        \"active_ext_capital\",\n",
     "    \"Internal PA capital (mm)\":             \"internal_pa_capital\",\n",
     "    # Returns mode ranges\n",
     "    \"In-House return min (%)\":              \"mu_H_min\",\n",
     "    \"In-House return max (%)\":              \"mu_H_max\",\n",
     "    \"In-House return step (%)\":             \"mu_H_step\",\n",
     "    \"In-House vol min (%)\":                 \"sigma_H_min\",\n",
     "    \"In-House vol max (%)\":                 \"sigma_H_max\",\n",
     "    \"In-House vol step (%)\":                \"sigma_H_step\",\n",
     "    \"Alpha-Extension return min (%)\":       \"mu_E_min\",\n",
     "    \"Alpha-Extension return max (%)\":       \"mu_E_max\",\n",
     "    \"Alpha-Extension return step (%)\":      \"mu_E_step\",\n",
     "    \"Alpha-Extension vol min (%)\":          \"sigma_E_min\",\n",
     "    \"Alpha-Extension vol max (%)\":          \"sigma_E_max\",\n",
     "    \"Alpha-Extension vol step (%)\":         \"sigma_E_step\",\n",
     "    \"External return min (%)\":              \"mu_M_min\",\n",
     "    \"External return max (%)\":              \"mu_M_max\",\n",
     "    \"External return step (%)\":             \"mu_M_step\",\n",
     "    \"External vol min (%)\":                 \"sigma_M_min\",\n",
     "    \"External vol max (%)\":                 \"sigma_M_max\",\n",
@@ -1936,26 +1937,26 @@
     "---"
    ]
   }
  ],
  "metadata": {
   "kernelspec": {
    "display_name": "Python (base)",
    "language": "python",
    "name": "base"
   },
   "language_info": {
    "codemirror_mode": {
     "name": "ipython",
     "version": 3
    },
    "file_extension": ".py",
    "mimetype": "text/x-python",
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
    "version": "3.12.2"
   }
  },
  "nbformat": 4,
  "nbformat_minor": 5
-}
+}
\ No newline at end of file
 
EOF
)