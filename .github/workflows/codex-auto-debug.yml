name: Streamlined Codex Auto-Debug

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]
  push:
    branches: [ 'codex/**' ]
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable verbose debugging'
        required: false
        default: 'false'

# Explicit permissions for GitHub Actions
permissions:
  contents: write          # Push commits and access repository
  pull-requests: write     # Comment on PRs
  issues: write           # PR comments (PRs are issues)
  actions: read           # Access workflow artifacts
  checks: write           # Update check status

jobs:
  streamlined-debug:
    runs-on: ubuntu-latest
    # Run on Codex branches or when manually triggered
    if: >
      startsWith(github.head_ref, 'codex/') || 
      startsWith(github.ref_name, 'codex/') || 
      github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.CODEX_PAT || secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up Git identity
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
    - name: üöÄ Run Streamlined Debug
      id: streamlined_debug
      run: |
        echo "Running streamlined debugging workflow..."
        echo "Current directory: $(pwd)"
        echo "Python version: $(python --version)"
        echo "Files in scripts/: $(ls -la scripts/)"
        
        if [ -f "scripts/streamlined_debug.py" ]; then
          echo "‚úÖ streamlined_debug.py found"
          python scripts/streamlined_debug.py
          exit_code=$?
          echo "streamlined_exit_code=$exit_code" >> $GITHUB_OUTPUT
          if [ $exit_code -eq 0 ]; then
            echo "‚úÖ Streamlined debug completed successfully"
            exit 0
          else
            echo "‚ö†Ô∏è Streamlined debug found issues (exit code: $exit_code)"
            exit $exit_code
          fi
        else
          echo "‚ùå streamlined_debug.py not found"
          echo "streamlined_exit_code=1" >> $GITHUB_OUTPUT
          exit 1
        fi
        
    - name: üìä Upload Streamlined Debug Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: streamlined-debug-report-${{ github.run_id }}
        path: streamlined_debug_report.md
        
    - name: üîç Run Detailed Debug (if streamlined found issues)
      id: detailed_debug
      if: steps.streamlined_debug.outputs.streamlined_exit_code != '0'
      run: |
        echo "Streamlined debug found issues. Running detailed analysis..."
        python scripts/debug_codex_pr.py --branch=${{ github.head_ref || github.ref_name }} --report=detailed_debug_report.md --max-iterations=3 --commit
        echo "detailed_exit_code=$?" >> $GITHUB_OUTPUT
        
    - name: üìä Upload Detailed Debug Report
      uses: actions/upload-artifact@v4
      if: steps.detailed_debug.outcome != 'skipped'
      with:
        name: detailed-debug-report-${{ github.run_id }}
        path: detailed_debug_report.md
        
    - name: üîç Check Fork Status
      if: github.event_name == 'pull_request'
      run: |
        if [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
          echo "‚ö†Ô∏è NOTICE: This PR is from an external fork"
          echo "üîí Some actions will be skipped due to security restrictions:"
          echo "   - PR commenting (to prevent token access issues)"
          echo "   - Auto-commit fixes (cannot push to fork)"
          echo "üìä Debug reports are still generated and available as artifacts"
        else
          echo "‚úÖ PR is from the same repository - all actions available"
        fi
        
    - name: üí¨ Comment Results on PR
      if: >
        github.event_name == 'pull_request' && 
        (github.event.pull_request.head.repo.full_name == github.repository || 
         github.repository_owner == github.actor)
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.CODEX_PAT || secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Check if we can post comments (not from external fork)
          const isFromFork = context.payload.pull_request.head.repo.full_name !== context.payload.repository.full_name;
          if (isFromFork) {
            console.log('PR is from external fork - skipping comment to avoid permission issues');
            return;
          }
          
          // Read streamlined report
          let streamlinedReport = '';
          try {
            streamlinedReport = fs.readFileSync('streamlined_debug_report.md', 'utf8');
          } catch (error) {
            streamlinedReport = '‚ùå Streamlined debug report generation failed';
            console.log('Streamlined report read error:', error);
          }
          
          // Read detailed report if it exists
          let detailedReport = '';
          try {
            detailedReport = fs.readFileSync('detailed_debug_report.md', 'utf8');
          } catch (error) {
            // Detailed report may not exist if streamlined debug passed
            console.log('No detailed report (this is normal if streamlined debug passed)');
          }
          
          // Determine overall status
          const streamlinedPassed = '${{ steps.streamlined_debug.outputs.streamlined_exit_code }}' === '0';
          const detailedRan = '${{ steps.detailed_debug.outcome }}' !== 'skipped';
          
          let statusEmoji = streamlinedPassed ? 'üéâ' : '‚ö†Ô∏è';
          let statusText = streamlinedPassed ? 'All Checks Passed' : 'Issues Found';
          
          let comment = `## ${statusEmoji} Automated Codex Debugging Results - ${statusText}
          
          ### üöÄ Streamlined Debug Results
          ${streamlinedReport}
          `;
          
          if (detailedRan && detailedReport) {
            comment += `
          ### üîç Detailed Debug Results
          ${detailedReport}
          `;
          }
          
          comment += `
          ---
          *Debug workflow: Streamlined ‚Üí ${streamlinedPassed ? 'Passed ‚úÖ' : 'Failed ‚ùå'}${detailedRan ? ' ‚Üí Detailed Analysis üîç' : ''}*
          `;
          
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            console.log('Successfully posted PR comment');
          } catch (error) {
            console.log('Failed to post PR comment:', error);
            core.setFailed(`Failed to post PR comment: ${error.message}`);
          }
          
    - name: ü§ñ Auto-commit fixes if any
      if: >
        (steps.streamlined_debug.outputs.streamlined_exit_code == '0' || 
         steps.detailed_debug.outputs.detailed_exit_code == '0') &&
        github.event_name != 'workflow_dispatch' &&
        (github.event_name != 'pull_request' || 
         github.event.pull_request.head.repo.full_name == github.repository)
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if this is a fork PR (additional safety check)
        if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
          echo "‚ö†Ô∏è Skipping auto-commit for fork PR to avoid permission issues"
          exit 0
        fi
        
        # Check if there are changes to commit
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, committing fixes..."
          git add .
          git commit -m "ü§ñ Auto-fix: Resolve Codex integration issues
          
          - Applied automatic formatting fixes
          - Resolved type compatibility issues  
          - Cleaned up import statements
          - Fixed common integration patterns
          
          Generated by streamlined debugging workflow"
          
          # Push with error handling
          if git push; then
            echo "‚úÖ Successfully pushed auto-fixes"
          else
            echo "‚ùå Failed to push auto-fixes - may need different permissions"
            exit 1
          fi
        else
          echo "‚úÖ No changes to commit - repository is already in good state"
        fi
        
    - name: üìã Set final status
      if: always()
      run: |
        streamlined_code="${{ steps.streamlined_debug.outputs.streamlined_exit_code }}"
        detailed_code="${{ steps.detailed_debug.outputs.detailed_exit_code }}"
        
        if [ "$streamlined_code" = "0" ]; then
          echo "‚úÖ Streamlined debug passed - all good!"
          exit 0
        elif [ "$detailed_code" = "0" ]; then
          echo "‚úÖ Detailed debug resolved issues - all good!"
          exit 0
        else
          echo "‚ö†Ô∏è Issues remain that need manual attention"
          exit 1
        fi
