name: Streamlined Codex Auto-Debug

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]
  push:
    branches: [ 'codex/**' ]
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable verbose debugging'
        required: false
        default: 'false'

# Explicit permissions for GitHub Actions
permissions:
  contents: write          # Push commits and access repository
  pull-requests: write     # Comment on PRs
  issues: write           # PR comments (PRs are issues)
  actions: read           # Access workflow artifacts
  checks: write           # Update check status

jobs:
  streamlined-debug:
    runs-on: ubuntu-latest
    # Run on Codex branches or when manually triggered
    if: >
      startsWith(github.head_ref, 'codex/') ||
      startsWith(github.ref_name, 'codex/') ||
      github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.CODEX_PAT || secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Git identity
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: 🚀 Run Streamlined Debug
      id: streamlined_debug
      run: |
        echo "Running streamlined debugging workflow..."
        python scripts/streamlined_debug.py
        exit_code=$?
        echo "streamlined_exit_code=$exit_code" >> $GITHUB_OUTPUT

    - name: 📊 Upload Streamlined Debug Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: streamlined-debug-report-${{ github.run_id }}
        path: streamlined_debug_report.md

    - name: 🔍 Run Detailed Debug (if streamlined found issues)
      id: detailed_debug
      if: steps.streamlined_debug.outputs.streamlined_exit_code != '0'
      run: |
        echo "Streamlined debug found issues. Running detailed analysis..."
        python scripts/debug_codex_pr.py --branch=${{ github.head_ref || github.ref_name }} --report=detailed_debug_report.md --max-iterations=3 --commit
        echo "detailed_exit_code=$?" >> $GITHUB_OUTPUT

    - name: 📊 Upload Detailed Debug Report
      uses: actions/upload-artifact@v4
      if: steps.detailed_debug.outcome != 'skipped'
      with:
        name: detailed-debug-report-${{ github.run_id }}
        path: detailed_debug_report.md

    - name: 💬 Comment Results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.CODEX_PAT || secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');

          // Read streamlined report
          let streamlinedReport = '';
          try {
            streamlinedReport = fs.readFileSync('streamlined_debug_report.md', 'utf8');
          } catch (error) {
            streamlinedReport = '❌ Streamlined debug report generation failed';
            console.log('Streamlined report read error:', error);
          }

          // Read detailed report if it exists
          let detailedReport = '';
          try {
            detailedReport = fs.readFileSync('detailed_debug_report.md', 'utf8');
          } catch (error) {
            // Detailed report may not exist if streamlined debug passed
            console.log('No detailed report (this is normal if streamlined debug passed)');
          }

          // Determine overall status
          const streamlinedPassed = '${{ steps.streamlined_debug.outputs.streamlined_exit_code }}' === '0';
          const detailedRan = '${{ steps.detailed_debug.outcome }}' !== 'skipped';

          let statusEmoji = streamlinedPassed ? '🎉' : '⚠️';
          let statusText = streamlinedPassed ? 'All Checks Passed' : 'Issues Found';

          let comment = `## ${statusEmoji} Automated Codex Debugging Results - ${statusText}

          ### 🚀 Streamlined Debug Results
          ${streamlinedReport}
          `;

          if (detailedRan && detailedReport) {
            comment += `
          ### 🔍 Detailed Debug Results
          ${detailedReport}
          `;
          }

          comment += `
          ---
          *Debug workflow: Streamlined → ${streamlinedPassed ? 'Passed ✅' : 'Failed ❌'}${detailedRan ? ' → Detailed Analysis 🔍' : ''}*
          `;

          try {
            const repoOwner = context.repo?.owner;
            const repoName = context.repo?.repo;
            if (repoOwner && repoName) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: repoOwner,
                repo: repoName,
                body: comment
              });
              console.log('Successfully posted PR comment');
            } else {
              console.log('Missing GitHub repo context, skipping PR comment');
            }
          } catch (error) {
            console.log('Failed to post PR comment:', error);
            core.setFailed(`Failed to post PR comment: ${error.message}`);
          }

    - name: 🤖 Auto-commit fixes if any
      if: >
        (steps.streamlined_debug.outputs.streamlined_exit_code == '0' ||
         steps.detailed_debug.outputs.detailed_exit_code == '0') &&
        github.event_name != 'workflow_dispatch'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Check if there are changes to commit
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, committing fixes..."
          git add .
          git commit -m "🤖 Auto-fix: Resolve Codex integration issues

          - Applied automatic formatting fixes
          - Resolved type compatibility issues
          - Cleaned up import statements
          - Fixed common integration patterns

          Generated by streamlined debugging workflow"

          # Push with error handling
          if git push; then
            echo "✅ Successfully pushed auto-fixes"
          else
            echo "❌ Failed to push auto-fixes - may need different permissions"
            exit 1
          fi
        else
          echo "✅ No changes to commit - repository is already in good state"
        fi

    - name: 📋 Set final status
      if: always()
      run: |
        streamlined_code="${{ steps.streamlined_debug.outputs.streamlined_exit_code }}"
        detailed_code="${{ steps.detailed_debug.outputs.detailed_exit_code }}"

        if [ "$streamlined_code" = "0" ]; then
          echo "✅ Streamlined debug passed - all good!"
          exit 0
        elif [ "$detailed_code" = "0" ]; then
          echo "✅ Detailed debug resolved issues - all good!"
          exit 0
        else
          echo "⚠️ Issues remain that need manual attention"
          exit 1
        fi
