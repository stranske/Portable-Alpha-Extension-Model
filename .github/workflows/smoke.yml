name: Multi-OS Smoke Test

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  smoke:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.10', '3.11', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: Cache build
        id: wheel-cache
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-${{ matrix.python }}-dist-${{ hashFiles('pyproject.toml') }}
      - name: Build package
        if: steps.wheel-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip build
          python -m build
      - name: Install package
        run: |
          pip install dist/*.whl
          pip install "plotly[kaleido]"
      - name: Install Chrome (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y chromium-browser
      - name: Install Chrome (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install chromium
      - name: Install Chrome (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install chromium -y
        shell: pwsh
      - name: Run smoke scenario
        shell: bash
        run: |
          python -m pa_core.cli --config config/ci_smoke.yml --index sp500tr_fred_divyield.csv --output smoke.xlsx --png --packet --seed 42 2>&1 | tee run.log
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smoke-${{ matrix.os }}-py${{ matrix.python }}
          path: |
            smoke.xlsx
            smoke.png
            smoke.pptx
            manifest.json
            run.log
          if-no-files-found: ignore
