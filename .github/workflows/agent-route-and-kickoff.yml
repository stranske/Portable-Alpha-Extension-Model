name: Route issue to agent + open kickoff PR

on:
  issues:
    types: [assigned, labeled, opened, edited, reopened]

permissions:
  contents: write        # create branch and commit marker
  pull-requests: write   # open the kickoff PR
  issues: write          # add labels and comment if needed

env:
  # Comma/space-separated GitHub logins that should be treated as Codex or Copilot assignees.
  # Set these in Repo Settings → Actions → Variables for your org's accounts.
  CODEX_ASSIGNEES: ${{ vars.CODEX_ASSIGNEES }}        # e.g. "codex-bot, codex"
  COPILOT_ASSIGNEES: ${{ vars.COPILOT_ASSIGNEES }}    # e.g. "github-copilot, copilot-bot"

jobs:
  route-and-kickoff:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Decide routing
        id: decide
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labels = (issue.labels || []).map(l => (l.name || '').toLowerCase());
            const assignees = (issue.assignees || []).map(a => (a.login || '').toLowerCase());
            const body = (issue.body || '');

            // Parse repo variables for assignee-based routing
            const codexList   = (process.env.CODEX_ASSIGNEES   || '').toLowerCase().split(/[,\s]+/).filter(Boolean);
            const copilotList = (process.env.COPILOT_ASSIGNEES || '').toLowerCase().split(/[,\s]+/).filter(Boolean);

            const wantsCodex =
              labels.includes('agent:codex') ||
              /- \[[xX]\]\s*Route to Codex/.test(body) ||
              assignees.some(a => codexList.includes(a));

            const wantsCopilot =
              labels.includes('agent:copilot') ||
              /- \[[xX]\]\s*Route to Copilot/.test(body) ||
              assignees.some(a => copilotList.includes(a));

            core.setOutput('issue', String(issue.number));
            core.setOutput('title', issue.title || '');
            core.setOutput('codex', wantsCodex ? 'true' : 'false');
            core.setOutput('copilot', wantsCopilot ? 'true' : 'false');

      - name: Check for existing kickoff PRs
        if: steps.decide.outputs.codex == 'true' || steps.decide.outputs.copilot == 'true'
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const n = Number('${{ steps.decide.outputs.issue }}');
            const prs = await github.paginate(github.rest.pulls.list, { owner, repo, state: 'open', per_page: 100 });
            const codexExists   = prs.some(pr => pr.head?.ref === `codex/fix-${n}`);
            const copilotExists = prs.some(pr => pr.head?.ref === `copilot/fix-${n}`);
            core.setOutput('codex_exists',   codexExists   ? 'true' : 'false');
            core.setOutput('copilot_exists', copilotExists ? 'true' : 'false');

      # ----- Codex lane -----
      - name: Write unique kickoff marker (Codex)
        if: steps.decide.outputs.codex == 'true' && steps.check.outputs.codex_exists != 'true'
        run: |
          mkdir -p .gate_smoke/codex
          ts="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          {
            echo "# Kickoff for issue #${{ steps.decide.outputs.issue }} (Codex)"
            echo "Triggered: $ts"
            echo "Nonce: $RANDOM"
          } > ".gate_smoke/codex/issue-${{ steps.decide.outputs.issue }}.md"

      - name: Create kickoff PR (Codex)
        if: steps.decide.outputs.codex == 'true' && steps.check.outputs.codex_exists != 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: codex/fix-${{ steps.decide.outputs.issue }}
          title: "Codex: Fix #${{ steps.decide.outputs.issue }} — ${{ steps.decide.outputs.title }}"
          body: |
            Auto-created kickoff PR for Codex to work on issue #${{ steps.decide.outputs.issue }}.
            Fixes #${{ steps.decide.outputs.issue }}
          labels: from:codex,automerge,risk:low
          draft: true
          commit-message: "chore(codex): kickoff for #${{ steps.decide.outputs.issue }}"

      # ----- Copilot lane -----
      - name: Write unique kickoff marker (Copilot)
        if: steps.decide.outputs.copilot == 'true' && steps.check.outputs.copilot_exists != 'true'
        run: |
          mkdir -p .gate_smoke/copilot
          ts="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          {
            echo "# Kickoff for issue #${{ steps.decide.outputs.issue }} (Copilot)"
            echo "Triggered: $ts"
            echo "Nonce: $RANDOM"
          } > ".gate_smoke/copilot/issue-${{ steps.decide.outputs.issue }}.md"

      - name: Create kickoff PR (Copilot)
        if: steps.decide.outputs.copilot == 'true' && steps.check.outputs.copilot_exists != 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: copilot/fix-${{ steps.decide.outputs.issue }}
          title: "Copilot: Fix #${{ steps.decide.outputs.issue }} — ${{ steps.decide.outputs.title }}"
          body: |
            Auto-created kickoff PR for Copilot to work on issue #${{ steps.decide.outputs.issue }}.
            Fixes #${{ steps.decide.outputs.issue }}
          labels: from:copilot,automerge,risk:low
          draft: true
          commit-message: "chore(copilot): kickoff for #${{ steps.decide.outputs.issue }}"
